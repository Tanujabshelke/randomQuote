{"version":3,"sources":["RandomQuote/QuoteUi.js","RandomQuote/Quote.js","App.js","index.js"],"names":["QuoteUi","props","className","id","quote","author","href","target","onClick","handleClick","Quote","url","useState","data","setData","useEffect","a","fetch","res","json","response","fData","fetchData","text","fDataLen","length","randomNum","Math","floor","random","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSA6BeA,MAvBf,SAAiBC,GACf,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKC,GAAG,YAAR,UACE,sBAAKD,UAAU,kBAAf,UACE,qBAAIC,GAAG,OAAP,eAAiBF,EAAMG,MAAvB,QACA,oBAAGD,GAAG,SAAN,mBAAsBF,EAAMI,aAE9B,sBAAKH,UAAU,qBAAf,UACE,wBAAQC,GAAG,cAAX,SACE,mBAAGG,KAAK,2BAA2BC,OAAO,SAA1C,SACE,cAAC,IAAD,CAAaL,UAAU,cAG3B,wBAAQC,GAAG,YAAYK,QAASP,EAAMQ,YAAtC,gCCuBKC,MAtCf,SAAeC,GACb,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA0BA,OAxBAC,qBAAU,YACO,uCAAG,gCAAAC,EAAA,sEACAC,MAAM,+BADN,cACZC,EADY,gBAGKA,EAAIC,OAHT,OAGZC,EAHY,OAIZC,EAAQD,EAAS,GAErBN,EAAQO,GANQ,2CAAH,qDAQfC,KACC,IAeD,8BACE,cAAC,EAAD,CACElB,MAAOS,EAAKU,KACZlB,OAAQQ,EAAKR,OACbI,YAjBc,YACH,uCAAG,kCAAAO,EAAA,sEACAC,MAAM,+BADN,cACZC,EADY,gBAGKA,EAAIC,OAHT,OAGZC,EAHY,OAIZI,EAAWJ,EAASK,OACpBC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWL,GAE3CV,EAAQM,EAASM,IAPD,2CAAH,qDASfJ,SClBWQ,MARf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,OCFN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.85d44156.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./QuoteUi.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\n//import Quote from \"./Quote\";\r\n\r\nfunction QuoteUi(props) {\r\n  return (\r\n    <div className=\"main\">\r\n      <div id=\"quote-box\">\r\n        <div className=\"quote-box--text\">\r\n          <h3 id=\"text\">\" {props.quote} \"</h3>\r\n          <p id=\"author\"> - by {props.author}</p>\r\n        </div>\r\n        <div className=\"qoute-box--buttons\">\r\n          <button id=\"tweet-quote\">\r\n            <a href=\"twitter.com/intent/tweet\" target=\"_blank\">\r\n              <TwitterIcon className=\"color\"></TwitterIcon>\r\n            </a>\r\n          </button>\r\n          <button id=\"new-quote\" onClick={props.handleClick}>\r\n            New Quote\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuoteUi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport QuoteUi from \"./QuoteUi\";\r\n\r\n//const url = \"https://type.fit/api/quotes\";\r\n\r\nfunction Quote(url) {\r\n  const [data, setData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let res = await fetch(\"https://type.fit/api/quotes\");\r\n\r\n      let response = await res.json();\r\n      let fData = response[2];\r\n      // console.log(fData.text);\r\n      setData(fData);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    const fetchData = async () => {\r\n      let res = await fetch(\"https://type.fit/api/quotes\");\r\n\r\n      let response = await res.json();\r\n      let fDataLen = response.length;\r\n      let randomNum = Math.floor(Math.random() * fDataLen);\r\n      // console.log(response.length);\r\n      setData(response[randomNum]);\r\n    };\r\n    fetchData();\r\n  };\r\n  return (\r\n    <div>\r\n      <QuoteUi\r\n        quote={data.text}\r\n        author={data.author}\r\n        handleClick={handleClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quote;\r\n","import \"./App.css\";\nimport Quote from \"./RandomQuote/Quote\";\nimport QuoteUi from \"./RandomQuote/QuoteUi\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quote />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals;\n"],"sourceRoot":""}