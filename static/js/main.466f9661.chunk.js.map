{"version":3,"sources":["RandomQuote/QuoteUi.js","RandomQuote/Quote.js","App.js","index.js"],"names":["QuoteUi","quote","author","handleClick","className","id","href","target","onClick","Quote","url","useState","text","data","setData","a","fetch","res","json","response","fDataLen","length","randomNum","Math","floor","random","fetchData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAgCeA,MA1Bf,YAA+D,IAA5CC,EAA2C,EAA3CA,MAA2C,IAApCC,cAAoC,MAA3B,WAA2B,EAAfC,EAAe,EAAfA,YAC7C,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKC,GAAG,YAAR,UACE,sBAAKD,UAAU,kBAAf,UACE,qBAAIC,GAAG,OAAP,eAAiBJ,EAAjB,QACA,oBAAGI,GAAG,SAAN,mBAAsBH,QAExB,sBAAKE,UAAU,qBAAf,UACE,wBAAQC,GAAG,cAAX,SACE,mBACEC,KAAK,sDACLC,OAAO,SAFT,SAIE,cAAC,IAAD,CAAaH,UAAU,cAG3B,wBAAQC,GAAG,YAAYG,QAASL,EAAhC,gCCWKM,MA7Bf,SAAeC,GACb,MAAwBC,mBAAS,CAC/BC,KAAM,0DACNV,OAAQ,sBAFV,mBAAOW,EAAP,KAAaC,EAAb,KAiBA,OACE,8BACE,cAAC,EAAD,CACEb,MAAOY,EAAKD,KACZV,OAAQW,EAAKX,OACbC,YAjBc,YACH,uCAAG,kCAAAY,EAAA,sEACAC,MAAM,+BADN,cACZC,EADY,gBAGKA,EAAIC,OAHT,OAGZC,EAHY,OAIZC,EAAWD,EAASE,OACpBC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWL,GAE3CN,EAAQK,EAASG,IAPD,2CAAH,qDASfI,SCTWC,MARf,WACE,OACE,qBAAKvB,UAAU,MAAf,SACE,cAAC,EAAD,OCFNwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.466f9661.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./QuoteUi.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\n//import Quote from \"./Quote\";\r\n\r\nfunction QuoteUi({ quote, author = \" unknown\", handleClick }) {\r\n  return (\r\n    <div className=\"main\">\r\n      <div id=\"quote-box\">\r\n        <div className=\"quote-box--text\">\r\n          <h3 id=\"text\">\" {quote} \"</h3>\r\n          <p id=\"author\"> - by {author}</p>\r\n        </div>\r\n        <div className=\"qoute-box--buttons\">\r\n          <button id=\"tweet-quote\">\r\n            <a\r\n              href=\"https://twitter.com/intent/tweet?text=Hello%20world\"\r\n              target=\"_blank\"\r\n            >\r\n              <TwitterIcon className=\"color\"></TwitterIcon>\r\n            </a>\r\n          </button>\r\n          <button id=\"new-quote\" onClick={handleClick}>\r\n            New Quote\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuoteUi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport QuoteUi from \"./QuoteUi\";\r\n\r\n//const url = \"https://type.fit/api/quotes\";\r\n\r\nfunction Quote(url) {\r\n  const [data, setData] = useState({\r\n    text: \" Arise,awake and donot stop until the goal is reached. \",\r\n    author: \"Swami Vivekananda\",\r\n  });\r\n\r\n  const handleClick = () => {\r\n    const fetchData = async () => {\r\n      let res = await fetch(\"https://type.fit/api/quotes\");\r\n\r\n      let response = await res.json();\r\n      let fDataLen = response.length;\r\n      let randomNum = Math.floor(Math.random() * fDataLen);\r\n      // console.log(response.length);\r\n      setData(response[randomNum]);\r\n    };\r\n    fetchData();\r\n  };\r\n  return (\r\n    <div>\r\n      <QuoteUi\r\n        quote={data.text}\r\n        author={data.author}\r\n        handleClick={handleClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quote;\r\n","import \"./App.css\";\nimport Quote from \"./RandomQuote/Quote\";\nimport QuoteUi from \"./RandomQuote/QuoteUi\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quote />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals;\n"],"sourceRoot":""}